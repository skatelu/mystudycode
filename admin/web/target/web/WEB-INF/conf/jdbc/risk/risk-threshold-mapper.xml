<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szkingdom.kjdp.core.dao.mybatis.IMapper">
	<select id="queryThresholdSetting" parameterType="jdbcMap" resultType="jdbcMap">
	   <include refid="kjdp_pagePrefix"/>
	   select * from (SELECT
	ri.THRES1_NO AS THRES_NO,
	ri.THRES1_NAME AS THRES_NAME,
	(
		i.INDICATOR_ID || ri.THRES1_NO
	) AS THRES_CODE,
	i.INDICATOR_ID,
	i.BIZ_ATTR,
	i.INDICATOR_CLS,
	i.INDICATOR_RESULT_TYPE,
	i.INDICATOR_NAME,
	ri.THRESHOLD1 AS THRESHOLD,
	ri.THRES1_OPER AS THRES_OPER,
	ri.THRES1_VALID AS THRES_VALID,
	ri.THRES1_COLOR AS THRES_COLOR
FROM
	INDICATOR_THRESHOLD ri
INNER JOIN RISK_INDICATORS i ON i.INDICATOR_ID = ri.INDICATOR_ID
UNION ALL
	SELECT
		ri.THRES2_NO AS THRES_NO,
		ri.THRES2_NAME AS THRES_NAME,
		(
			i.INDICATOR_ID || ri.THRES2_NO
		) AS THRES_ID,
		i.INDICATOR_ID,
		i.BIZ_ATTR,
		i.INDICATOR_CLS,
		i.INDICATOR_RESULT_TYPE,
		i.INDICATOR_NAME,
		ri.THRESHOLD2 AS THRESHOLD,
		ri.THRES2_OPER AS THRES_OPER,
		ri.THRES2_VALID AS THRES_VALID,
		ri.THRES2_COLOR AS THRES_COLOR
	FROM
		INDICATOR_THRESHOLD ri
	INNER JOIN RISK_INDICATORS i ON i.INDICATOR_ID = ri.INDICATOR_ID
	UNION ALL
		SELECT
			ri.THRES3_NO AS THRES_NO,
			ri.THRES3_NAME AS THRES_NAME,
			(
				i.INDICATOR_ID || ri.THRES3_NO
			) AS THRES_ID,
			i.INDICATOR_ID,
			i.BIZ_ATTR,
			i.INDICATOR_CLS,
			i.INDICATOR_RESULT_TYPE,
			i.INDICATOR_NAME,
			ri.THRESHOLD3 AS THRESHOLD,
			ri.THRES3_OPER AS THRES_OPER,
			ri.THRES3_VALID AS THRES_VALID,
			ri.THRES3_COLOR AS THRES_COLOR
		FROM
			INDICATOR_THRESHOLD ri
		INNER JOIN RISK_INDICATORS i ON i.INDICATOR_ID = ri.INDICATOR_ID
		UNION ALL
			SELECT
				ri.THRES4_NO AS THRES_NO,
				ri.THRES4_NAME AS THRES_NAME,
				(
					i.INDICATOR_ID || ri.THRES4_NO
				) AS THRES_ID,
				i.INDICATOR_ID,
				i.BIZ_ATTR,
				i.INDICATOR_CLS,
				i.INDICATOR_RESULT_TYPE,
				i.INDICATOR_NAME,
				ri.THRESHOLD4 AS THRESHOLD,
				ri.THRES4_OPER AS THRES_OPER,
				ri.THRES4_VALID AS THRES_VALID,
				ri.THRES4_COLOR AS THRES_COLOR
			FROM
				INDICATOR_THRESHOLD ri
			INNER JOIN RISK_INDICATORS i ON i.INDICATOR_ID = ri.INDICATOR_ID
	    ) p  
	     where 1 = 1  
	     <if test="BIZ_ATTR != null and BIZ_ATTR != ''">
	       and  p.BIZ_ATTR = #{BIZ_ATTR}
	     </if>
	    <if test="INDICATOR_CLS != null and INDICATOR_CLS != ''">
           and p.INDICATOR_CLS = #{INDICATOR_CLS}
       </if>
        <if test="INDICATOR_NAME != null and INDICATOR_NAME != ''">
           and (p.INDICATOR_NAME = #{INDICATOR_NAME} or p.INDICATOR_ID = #{INDICATOR_NAME})
       </if>
	    and THRES_NAME is not null and length(trim(THRES_NAME)) >= 1
	     order by p.INDICATOR_ID,p.THRES_NO
	    <include refid="kjdp_pageSuffix"/>
	</select>
	
	<select id="queryThresholdSetting_COUNT" parameterType="jdbcMap" resultType="jdbcMap">
	   select count(*) AS RS_ROWS from (SELECT
	ri.THRES1_NO AS THRES_NO,
	ri.THRES1_NAME AS THRES_NAME,
	(
		i.INDICATOR_ID || ri.THRES1_NO
	) AS THRES_CODE,
	i.INDICATOR_ID,
	i.BIZ_ATTR,
	i.INDICATOR_CLS,
	i.INDICATOR_RESULT_TYPE,
	i.INDICATOR_NAME,
	ri.THRESHOLD1 AS THRESHOLD,
	ri.THRES1_OPER AS THRES_OPER,
	ri.THRES1_VALID AS THRES_VALID,
	ri.THRES1_COLOR AS THRES_COLOR
FROM
	INDICATOR_THRESHOLD ri
INNER JOIN RISK_INDICATORS i ON i.INDICATOR_ID = ri.INDICATOR_ID
UNION ALL
	SELECT
		ri.THRES2_NO AS THRES_NO,
		ri.THRES2_NAME AS THRES_NAME,
		(
			i.INDICATOR_ID || ri.THRES2_NO
		) AS THRES_ID,
		i.INDICATOR_ID,
		i.BIZ_ATTR,
		i.INDICATOR_CLS,
		i.INDICATOR_RESULT_TYPE,
		i.INDICATOR_NAME,
		ri.THRESHOLD2 AS THRESHOLD,
		ri.THRES2_OPER AS THRES_OPER,
		ri.THRES2_VALID AS THRES_VALID,
		ri.THRES2_COLOR AS THRES_COLOR
	FROM
		INDICATOR_THRESHOLD ri
	INNER JOIN RISK_INDICATORS i ON i.INDICATOR_ID = ri.INDICATOR_ID
	UNION ALL
		SELECT
			ri.THRES3_NO AS THRES_NO,
			ri.THRES3_NAME AS THRES_NAME,
			(
				i.INDICATOR_ID || ri.THRES3_NO
			) AS THRES_ID,
			i.INDICATOR_ID,
			i.BIZ_ATTR,
			i.INDICATOR_CLS,
			i.INDICATOR_RESULT_TYPE,
			i.INDICATOR_NAME,
			ri.THRESHOLD3 AS THRESHOLD,
			ri.THRES3_OPER AS THRES_OPER,
			ri.THRES3_VALID AS THRES_VALID,
			ri.THRES3_COLOR AS THRES_COLOR
		FROM
			INDICATOR_THRESHOLD ri
		INNER JOIN RISK_INDICATORS i ON i.INDICATOR_ID = ri.INDICATOR_ID
		UNION ALL
			SELECT
				ri.THRES4_NO AS THRES_NO,
				ri.THRES4_NAME AS THRES_NAME,
				(
					i.INDICATOR_ID || ri.THRES4_NO
				) AS THRES_ID,
				i.INDICATOR_ID,
				i.BIZ_ATTR,
				i.INDICATOR_CLS,
				i.INDICATOR_RESULT_TYPE,
				i.INDICATOR_NAME,
				ri.THRESHOLD4 AS THRESHOLD,
				ri.THRES4_OPER AS THRES_OPER,
				ri.THRES4_VALID AS THRES_VALID,
				ri.THRES4_COLOR AS THRES_COLOR
			FROM
				INDICATOR_THRESHOLD ri
			INNER JOIN RISK_INDICATORS i ON i.INDICATOR_ID = ri.INDICATOR_ID
	    ) p  
	     where 1 = 1  
	     <if test="BIZ_ATTR != null and BIZ_ATTR != ''">
	       and  p.BIZ_ATTR = #{BIZ_ATTR}
	     </if>
	    <if test="INDICATOR_CLS != null and INDICATOR_CLS != ''">
           and p.INDICATOR_CLS = #{INDICATOR_CLS}
       </if>
        <if test="INDICATOR_NAME != null and INDICATOR_NAME != ''">
           and (p.INDICATOR_NAME = #{INDICATOR_NAME} or p.INDICATOR_ID = #{INDICATOR_NAME})
       </if>
	    and THRES_NAME is not null and length(trim(THRES_NAME)) >= 1
	</select>
	
	<update id="updateThresholdSetting" parameterType="jdbcMap">
	    update INDICATOR_THRESHOLD set 
	    THRES1_NAME = #{THRES1_NAME},
		THRES1_COLOR = #{THRES1_COLOR},
		THRES1_OPER = #{THRES1_OPER},
		THRESHOLD1= #{THRESHOLD1},
		THRES1_NO = #{THRES1_NO},
		THRES2_NAME = #{THRES2_NAME},
		THRES2_COLOR = #{THRES2_COLOR},
		THRES2_OPER = #{THRES2_OPER},
		THRESHOLD2= #{THRESHOLD2},
		THRES2_NO = #{THRES2_NO},
		THRES3_NAME = #{THRES3_NAME},
		THRES3_COLOR = #{THRES3_COLOR},
		THRES3_OPER = #{THRES3_OPER},
		THRESHOLD3= #{THRESHOLD3},
		THRES3_NO = #{THRES3_NO},
		THRES4_NAME = #{THRES4_NAME},
		THRES4_COLOR = #{THRES4_COLOR},
		THRES4_OPER = #{THRES4_OPER},
		THRESHOLD4= #{THRESHOLD4},
		THRES4_NO = #{THRES4_NO}
	    where INDICATOR_ID = #{INDICATOR_ID}
	</update>
	
	<insert id="insertThresholdSetting" parameterType="jdbcMap">
	    insert into INDICATOR_THRESHOLD (INDICATOR_ID
			,THRES_CNT,THRESHOLD1,THRES1_NO,THRES1_NAME,THRES1_COLOR
			,THRES1_OPER,THRES1_VALID,THRESHOLD2,THRES2_NO,THRES2_NAME
			,THRES2_COLOR,THRES2_OPER,THRES2_VALID,THRESHOLD3
			,THRES3_NO,THRES3_NAME,THRES3_COLOR,THRES3_OPER
			,THRES3_VALID,THRESHOLD4,THRES4_NO,THRES4_NAME,THRES4_COLOR
			,THRES4_OPER,THRES4_VALID) 
	    values (#{INDICATOR_ID},4,#{THRESHOLD1}
			,#{THRES1_NO},#{THRES1_NAME},#{THRES1_COLOR}
			,#{THRES1_OPER},1,#{THRESHOLD2}
			,#{THRES2_NO},#{THRES2_NAME},#{THRES2_COLOR}
			,#{THRES2_OPER},1,#{THRESHOLD3}
			,#{THRES3_NO},#{THRES3_NAME},#{THRES3_COLOR}
			,#{THRES3_OPER},1,#{THRESHOLD4}
			,#{THRES4_NO},#{THRES4_NAME},#{THRES4_COLOR}
			,#{THRES4_OPER},1)
	</insert>
	
</mapper>

