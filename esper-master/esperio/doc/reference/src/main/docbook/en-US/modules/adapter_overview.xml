<chapter xml:id="adapter_overview" version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="./" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">

    <title>Adapter Overview</title>
    
    <para>
        Input and output adapters to Esper provide the means of accepting events from various sources, and for making available events to destinations.
    </para>
    
    <note>
		<para>
			Esper has a fully-evolved API and natively accepts various input event formats and natively produces various output event objects, as part of core Esper.
		</para>
		<para>
			It is therefore not necessary to use any of the adapters listed herein. Simply use the public Esper APIs directly in your code.
		</para>
	</note>

    <para>
        Most adapters present their own configuration as well as API. Some adapters also provide operators for use in data flows.
    </para>
	
	<sect1 xml:id="adapter-inputadapter">
		<title>The Adapter Interface</title>

		<para>
				The <literal>Adapter</literal> interface allows client applications to control the state of an input and output adapter. It provides state transition methods that each
				input and output adapter implements. 
		</para>
		
		<para>
				An input or output adapter is always in one of the following states:
		</para>

		<itemizedlist spacing="compact">
			<listitem>
				<para>
					Opened - The begin state; The adapter is not generating or accepting events in this state
				</para>
			</listitem>
			<listitem>
				<para>
					Started - When the adapter is active, generating and accepting events
				</para>
			</listitem>
			<listitem>
				<para>
					Paused - When operation of the adapter is suspended
				</para>
			</listitem>
			<listitem>
				<para>
					Destroyed
				</para>
			</listitem>
		</itemizedlist>

		<para>
				The state transition table below outlines adapter states and, for each state, the valid state transitions:
		</para>

		<table frame="topbot" xml:id="adapter-states" revision="2">
			<title>Adapter State Transitions</title>
			<tgroup cols="3">
				<colspec colwidth="2.0*"/>
				<colspec colwidth="1.5*"/>
				<colspec colwidth="2.0*"/>
				<thead>
					<row>
						<entry>Start State</entry>
						<entry>Method</entry>
						<entry>Next State</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>Opened</entry>
						<entry>start()</entry>
						<entry>Started</entry>
					</row>
					<row>
						<entry>Opened</entry>
						<entry>destroy()</entry>
						<entry>Destroyed</entry>
					</row>
					<row>
						<entry>Started</entry>
						<entry>stop()</entry>
						<entry>Opened</entry>
					</row>
					<row>
						<entry>Started</entry>
						<entry>pause()</entry>
						<entry>Paused</entry>
					</row>
					<row>
						<entry>Started</entry>
						<entry>destroy()</entry>
						<entry>Destroyed</entry>
					</row>
					<row>
						<entry>Paused</entry>
						<entry>resume()</entry>
						<entry>Started</entry>
					</row>
					<row>
						<entry>Paused</entry>
						<entry>stop()</entry>
						<entry>Opened</entry>
					</row>
					<row>
						<entry>Paused</entry>
						<entry>destroy()</entry>
						<entry>Destroyed</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</sect1>
</chapter>
